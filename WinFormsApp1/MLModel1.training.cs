﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace SpotifyProgramForms
{
    public partial class MLModel1
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@"USER_ID", @"USER_ID")      
                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"Acousticness", @"Acousticness"),new InputOutputColumnPair(@"Danceability", @"Danceability"),new InputOutputColumnPair(@"Energy", @"Energy"),new InputOutputColumnPair(@"Instrumentalness", @"Instrumentalness"),new InputOutputColumnPair(@"Key", @"Key"),new InputOutputColumnPair(@"Liveness", @"Liveness"),new InputOutputColumnPair(@"Loudness", @"Loudness"),new InputOutputColumnPair(@"Mode", @"Mode"),new InputOutputColumnPair(@"Speechiness", @"Speechiness"),new InputOutputColumnPair(@"Tempo", @"Tempo"),new InputOutputColumnPair(@"Time_Signature", @"Time_Signature"),new InputOutputColumnPair(@"Valence", @"Valence")}))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"USER_ID",@"Acousticness",@"Danceability",@"Energy",@"Instrumentalness",@"Key",@"Liveness",@"Loudness",@"Mode",@"Speechiness",@"Tempo",@"Time_Signature",@"Valence"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@"Like",inputColumnName:@"Like"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.OneVersusAll(binaryEstimator:mlContext.BinaryClassification.Trainers.FastTree(new FastTreeBinaryTrainer.Options(){NumberOfLeaves=13,MinimumExampleCountPerLeaf=21,NumberOfTrees=16,MaximumBinCountPerFeature=266,FeatureFraction=0.880597608891015,LearningRate=0.0250857142984076,LabelColumnName=@"Like",FeatureColumnName=@"Features"}),labelColumnName: @"Like"))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@"PredictedLabel",inputColumnName:@"PredictedLabel"));

            return pipeline;
        }
    }
}
